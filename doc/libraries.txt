Paper Plane xUI Script Module JavaScript Libraries
===============================================================================

*script、%*script()で呼び出して使えるスクリプトです。

===============================================================================
CONTENTS

	discardStayMode.js
	errors.js
	exeExists.js
	lfActions.js
	lfDset.js
	lfMetadata.js
	libExists.js
	checkPid.js
	seeProcess.js
	setsel.stay.js
	sourceData.js
	input.js
	countEntries.vbs
	getEntries.vbs

===============================================================================
discardStayMode.js
ppmdev/modules/staymode.tsのatDebounce関数から実行される前提のスクリプトです。
指定されたインスタンスのPPx.StayMode=0(破棄)します。

@arg 0 {string} - _Userに一時的に登録するプロパティ名を指定
@arg 1 {number} - PPx.StayModeが返すスクリプトのインスタンス番号を指定
@arg 2 {string} - "DEBUG"を指定すると、破棄時にデバッグメッセージを表示します

===============================================================================
errors.js
エラー情報を表示します。
distディレクトリ配下(dist/xxx.js)のスクリプトから実行されたときは、
ソース側(src/xxx.ts)のコメントを参照します。

@arg 0 {string} - "arg"|"msg" - 実行するメソッド名を指定
	arg: ソーススクリプト行頭のコメントから" * @arg"を読み取り引数情報を表示
	msg: メッッセージを表示
@arg 1 {string} - 対象ファイルのパスを指定
@arg 2 {string} - arg0で"msg"を指定したときに表示されるメッセージを指定

===============================================================================
exeExists.js
実行ファイルにパスが通っているか確認して返します。

@arg 0+ {string} - 確認する実行ファイル名をカンマ区切りで指定
@return {string} - JSON形式のリスト
	{ "1.exe": true, "2.exe": false, ... }

===============================================================================
lfActions.js
リストファイル上のマークエントリに対し、コマンドを実行します。

@arg 0 {string} - S_ppm#actionsのコマンドアイリアスを指定します。
@arg 1 {"enclose"|"double"|"escape"} - 空白を含むパスの処理方法を指定します。
	"enclose"	ダブルクオートで括る
	"double"	ダブルクオート2つで括る
	"escape"	バックスラッシュでエスケープする
@arg 2 {number} - If non-zero, allow duplicate paths
	"0"以外を指定すると重複したパスを実行対象に含めます。

===============================================================================
lfDset.js
指定したListFileのメタデータを取得して返し、同時に%su'ppmlfdset%n'にJSON形式で
メタデータを登録し、メタデータ"cmd"の値を返します。
また、リストファイルを閉じたときに%su'ppmlfdset%n'、K_ppmTemp、M_ppmTempを
削除するための一時設定をKC_main:LOADEVENT、KC_main:CLOSEEVENTに登録します。

@arg 0 {string} - リストファイルのパスを指定
@arg 1 {string} - メタデータのIDを指定
@arg 2 {"sjis"|"utf8"|"utf16le"(default)} - リストファイルのエンコードを指定

===============================================================================
lfMetadata.js
指定したListFileのメタデータを取得して返します

@arg 0 {string} - リストファイルのパスを指定
@arg 1 {string} - メタデータのIDを指定
@arg 2 {"sjis"|"utf8"|"utf16le"(default)} - リストファイルのエンコードを指定

===============================================================================
libExists.js
PPxインストールディレクトリ配下にライブラリが存在しているか確認して返します。

@arg 0+ {string} - 確認するライブラリ名をカンマ区切りで指定
@return {string} - JSON形式のリスト
	{ "1.dll": true, "2.dll": false, ... }

===============================================================================
checkPid.js
指定したプロセスIDが存在しているか確認して返します。

@arg 0  {string}  - プロセスIDを指定
@return {boolean} - プロセスが存在していればtrue

===============================================================================
seeProcess.js
指定プロセスが起動するまで待機します。
凡そ500ミリ秒ごとにプロセスの起動を確認します。
待機時間を0に設定したときは一度だけプロセスを確認して終了します。

@arg 0  {string}  - プロセス名を指定
@arg 1  {number}  - 待機時間を指定(初期値:6000)
@arg 2  {string}  - 起動後に実行するコマンドラインを指定
@arg 3  {number}  - GUIの起動状態を指定。(WScript.Shell.Runのstyle値)
@return {boolean} - スクリプト実行時にプロセスが起動済みならtrue

===============================================================================
setsel.js @deprecated
正規表現で指定した範囲を選択状態にします。

@arg 0 {string} - 正規表現 "(<範囲の前の文字列>)(範囲選択する文字列>)"
@arg 1 {number} - 0以外のとき、複数行の範囲選択を受け付けます

===============================================================================
setsel.stay.js
正規表現で指定した範囲を選択状態にします。

@arg 0 {string} - 正規表現 "(<範囲の前の文字列>)(範囲選択する文字列>)"
@arg 1 {number} - 0以外のとき、複数行の範囲選択を受け付けます
@arg 2 {number} - 1を指定したとき、一行編集を閉じるまでスクリプトの実行状態を
                  維持します

===============================================================================
expandSource.js
S_ppm#sourceから値を抽出します。

@arg 0  {string} - プラグイン名を指定
@arg 1  {string} - 抽出するフィールド名を指定
@return {string} - 抽出したフィールドの値。値がないときは空文字を返します。
                   引数が間違っている、指定したプラグインが存在しないときなどは
                   "[error]"を返します。

===============================================================================
input.js
%*input(... -k *completelist ...)を実行します。

@arg 0  {object} - オブジェクトをJSON形式で指定
@return {string} - 入力結果。exitcodeが"0"以外なら"[error]"を返します。

引数は"{'key':'value'}"、または"{""key"":""value""}"の形式で記述します。
valueの型は、string|booleanのどちらかです。
string型はクオートで括り、boolean型は括りません。
以下はkey,{type},value初期値のリストです。
{
  "text":         {string}  "",
  "title":        {string}  "ppm/input.js",
  "mode":         {string}  "e",
  "select":       {string}  "a",
  "k":            {string}  "",
  "forpath":     {boolean}  false,
  "fordigit":    {boolean}  false,
  "leavecancel": {boolean}  false,
  "multi":       {boolean}  false,

  "list":         {string}  "off",
  "module":       {string}  "off",
  "match":        {string}  "",
  "detail":       {string}  "",
  "file":         {string}  "",

  "autoselect":  {boolean}  false,
}

%*input()のオプション、*completelistのオプション、autoselectが含まれます。

引数"autoselect"がtrueのとき、補完リストが表示中かつ非選択状態でEnterキーを押す
と第一候補が自動で選択されます。

引数"file"が設定されているとき、Ctrl+Oキーを押すとPPeで補完候補リストの編集を
Ctrl+Sキーを押すと編集内容を補完候補リストに追加保存します。

入力バーの終了時にK_ppmTempとM_ppmTempを削除します。

===============================================================================
menu.js
メニュー項目を操作します。

@arg 0  {sring}  "insert"|"replace"|"delete" - 実行するメソッド
@arg 1  {sring}  - メニューID
@arg 2  {number} - メニュー番号
@arg 3  {sring}  - メニューSubID
@arg 4  {sring}  - 実行するコマンド
@return {string} - 実行結果メッセージ

===============================================================================
countEntries.js
指定ディレクトリ配下のエントリ数を返します。

@arg 0 {string} - ディレクトリパスを指定
@arg 1 {string} "both"(default)|"dir"|"file" - 対象とするファイル属性を指定
@arg 2 {number} - 取得上限を設定

===============================================================================
getEntries.js
指定したディレクトリ内のファイル名をカンマ区切りで返します。
速度に問題があるためファイル数の多いディレクトリへの再帰検索は非推奨。

@arg 0  {string} - ディレクトリパスを指定
@arg 1  {string} "both"(初期値)|"dir"|"file" - 対象とするファイル属性を指定
@arg 2  {number} - パスの絞り込み対象となる文字列を指定(大小文字無視)
@arg 3  {number} - 0以外を指定するとディレクトリを再帰的に検索する
@return {string} - 配列形式のリスト
	[ "dir1", "dir2", "file1", "file2", ...]

===============================================================================
