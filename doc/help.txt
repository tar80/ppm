ppx-plugin-manager

Author: tar80 <tar80master@google.com>
License: MIT License
Repository: https://github.com/tar80/ppm
===============================================================================

ppx-plugin-manager(ppm)は、TORO氏作のファイル操作ツール集Paper Plane xUI用
のプラグインマネージャーです。JavaScriptで構成されレジストリは使用しません。

プラグインのインストール・アップデート・アンインストールができる他、
ローカル設定ファイルの読み込みも可能です。
現在ベータ版でどんなバグがあるかわかりません。最初は別環境のPPxで試してみること
を推めます。

なおppmの作成にTORO氏は関与していませんので、PPx公式の掲示板でppmの質問は
しないでください。バグや動作不良の報告はGitHubにイシューを立ててください。

===============================================================================
動作環境

UNICODE版、64bit版のPPxが対象。MultiByte版は動作対象外となります。
その他の条件として、
	・PPx Script Module、PPx Key Module、 PPx Text Moduleの導入
	・正規表現ライブラリbregonig.dllの導入
	・gitのインストール
が必要になります。
ClearScriptV8は限定的な対応となっています。とりあえず動く程度と考えてください。

===============================================================================
インストール

"*script ppx-plugin-manager\dist\installer.js"を実行します。
いくつかの確認のあと、動作条件を満たしていればインストールを開始します。
途中、ディスプレイサイズを取得する処理でIEを起動しているため、時間が係る
場合があります。
インストールに成功すると必要なファイル類が最初に指定したパス以下へ作成されます。
git cloneしたppx-plugin-managerリポジトリは使用しませんのでインストール後に
削除してください。

引数に"1"を付けて実行すると、開発者モードとしてカレントディレクトリに
インストールされます。開発者モードではリモートからのアップデート対象外
となります。通常、開発者モードで実行する必要はありません。

===============================================================================
アンインストール

"*ppmSystemUninstall"を実行します。
プラグインが追加した設定の削除と<ppmhome>\repo、<ppmhome>\archが削除され、
<ppmhome>\cacheは残ります。

===============================================================================
設定の復元

PPxの初期化時には当然ながらppmの設定も削除されます。*ppmRestoreRegを
実行しておけば、PPXDEF.CFGに*ppmRestoreの設定が追記されます。
*ppmRestoreはプラグイン設定を復元します。

*ppmRestoreUnregを実行するとPPXDEF.CFGから*ppmRestoreが削除されます。

===============================================================================
構成ファイルの説明

ppmは以下のファイルから構成されます。

<ppmhome>\		インストール時に指定したディレクトリ
  ├─arch\	プラグインがダウンロードした書庫ファイルの保管場所
  ├─repo\	プラグインごとのリポジトリ保管場所(ppm本体はここにある)
  └─cache\	ppmが作成するファイル類
     └─xxx\		PPxのプロファイルごとの保存場所
        ├─backup\		日付ごとのPPx設定情報(PPX.CFG)の保存場所
        │  └─_initial.cfg	ppmインストール前のPPx設定情報
        ├─complist\			各種補完候補リストの保存場所
        │  └─ppmsources.txt	導入済みプラグインのリスト
        ├─config\		<プラグインネーム>.cfgの保存場所
        ├─list\			各種リストの保存場所
        │  ├─_pluginlist		有効化するプラグインのパスリスト
        │  └─_managefiles	プラグイン外のユーザー設定ファイルリスト
        ├─ppm\			ppmが使うファイルの保存場所
        │  ├─setup\		プラグインごとの追加設定CFGの保存場所
        │  ├─unset\		プラグインごとの削除設定CFGの保存場所
        │  ├─_noplugin.cfg	直近のプラグイン設定を除外したPPx設定情報
        │  └─_global.cfg		直近のppm設定値バックアップファイル
        └─userscript\		利用者が編集可能なスクリプトの補完場所

===============================================================================
テーブル情報

S_ppm#global	ppmが使用する各種設定値の保存場所
  ├─version	ppmのバージョン
  ├─home	ppmが使用するファイルの保存場所
  ├─ppm		ppmリポジトリのパス
  ├─git		gitのインストールディレクトリ
  ├─dev		開発者モードのフラグ
  ├─disp_width	ディスプレイの横幅
  ├─disp_height	ディスプレイの縦幅
  ├─lib		ライブラリスクリプトの保存場所 *deprecated
  ├─cache	ppmが直接操作するファイルの保存場所 *deprecated
  ├─module	モジュールスクリプトの保存場所 *deprecated
  └─scripttype	使用中のJavaScriptライブラリ *deprecated

S_ppm#plugins	S_ppm#sourcesに変更 *deprecated

S_ppm#sources	インストール済みのプラグインの名称(サブID)と値
 plugin-name = {location, enable, setup, path?, branch?, commit?}

S_ppm#user	利用者が変更可能なプラグインの設定値

_User
  ├─ppmhome	ppmが使用するファイルの保存場所
  ├─ppmarch	書庫ファイルの保存場所
  ├─ppmrepo	プラグインの保存場所
  ├─ppmcache	キャッシュファイルの保存場所
  ├─ppm 	ppmのインストールディレクトリ
  └─ppmlib	ライブラリスクリプトの保存場所

===============================================================================
ユーザーコマンド

*ppmHelp
	一行編集で指定したプラグインのヘルプファイルを開きます。

*ppmUsed
	ppmがPPxに登録したプロパティ値とプラグイン名をPPvに表示します。

*ppmInstall
	_pluginlistに記載したプラグインをppmにインストールします。

*ppmUpdate
	一行編集で指定したプラグインの更新状態をチェックし、更新があれば
	アップデートします。
	プラグイン名に"all"を指定すると全プラグインを対象に実行します。

*ppmPluginlist
	_pluginlistを編集します。

*ppmEdit
	一行編集で指定したプラグインの設定を編集します。
	プラグイン指定時にShiftキーが押されていると補助ダイアログが表示されます。

*ppmCompare
	一行編集で指定したプラグインのユーザー設定と初期設定を比較します。
	プラグイン指定時にShiftキーが押されていると補助ダイアログが表示されます。

*ppmSet
	一行編集で指定したプラグインを適用します。
	プラグイン名に"all"を指定すると全プラグインを対象に実行します。

*ppmSetDefault
	一行編集で指定したプラグインの初期設定を適用します。
	プラグイン名に"all"を指定すると全プラグインを対象に実行します。

*ppmUnset
	一行編集で指定したプラグインの設定を削除します。
	プラグイン名に"all"を指定すると全プラグインを対象に実行します。

*ppmLoadCfg
	一行編集で選択した設定ファイルを読み込みます。

*ppmManageCfg
	ppmで管理するプラグイン外のPPx設定ファイルを選択できます。
	選択ファイルのパスは<ppmcache>\list\_managefilesに書き出されます。
	何も選択しなかった場合は<ppmhome>cache\ppm\_noplugin.cfgが、
	なかった場合は<ppmcache>\backup\_initial.cfgが書き出されます。
	_managefilesは、*ppmRestore実行時に読み込まれます。

*ppmRestore
	PPxの初期化後に設定を復元します。復元される設定は、_managefilesで
	指定されたファイルとプラグイン設定です。

*ppmRestoreReg
	PPXDEF.CFGに*ppmRestoreのコードを追記します。

*ppmRestoreUnreg
	PPXDEF.CFGから*ppmRestoreのコードを削除します。

*ppmCleanup
	インストール済み、かつ現在有効化されていないプラグインを削除します。
	<ppmhome>\repo内のプラグインが対象です。

*ppmSystemUninstall
	ppmをアンインストールします。

===============================================================================
